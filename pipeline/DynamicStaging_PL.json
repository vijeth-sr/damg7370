{
	"name": "DynamicStaging_PL",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select t.name as tableName\nfrom sys.tables t join sys.schemas s\non t.schema_id = s.schema_id\n where type = 'U' and s.name = '@{pipeline().parameters.SName}';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference",
						"parameters": {
							"tableName": "Customer",
							"schemaName": {
								"value": "@pipeline().parameters.SName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachTable",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"batchCount": 10,
					"activities": [
						{
							"name": "Source_to_Parquet",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference",
									"parameters": {
										"tableName": {
											"value": "@item().tableName",
											"type": "Expression"
										},
										"schemaName": {
											"value": "@pipeline().parameters.SName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DestinationParquet",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@concat(item().tableName,'.parquet')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DestinationParquet",
									"type": "DatasetReference",
									"parameters": {
										"FileName": "@concat(item().tableName,'.parquet')"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SnowflakeTable1",
									"type": "DatasetReference",
									"parameters": {
										"tableName": "@item().tableName"
									}
								}
							]
						},
						{
							"name": "Data flow1",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "Source_to_Parquet",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "dataflow1",
									"type": "DataFlowReference",
									"datasetParameters": {
										"source1": {
											"FileName": "@concat(item().tableName,'.parquet')"
										},
										"sink1": {
											"tableName": "@item().tableName"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SName": {
				"type": "string"
			}
		},
		"variables": {
			"tableName": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-12-02T03:20:56Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}